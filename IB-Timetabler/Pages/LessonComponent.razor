@page "/lessons/{Code}"

<TitleComponent Page="@($"Lesson: {lesson.Name}")"></TitleComponent>
<br/>
<NavLink class="button" href="lessons" style="text-decoration: none">Back to Lessons</NavLink>
<br/><br/>

<AutoLessonTableComponent
    Headers="headers"
    Items="new List<Lesson> {lesson}"
    ColumnsToExcludeCSV="Rooms, Periods"
    LinkFirst="">
</AutoLessonTableComponent>
<br/><br/>

<InputComponent Label="Name:">
    <Control>
        <input class="input" @bind-value="@lesson.Name" @bind-value:event="onsubmit" type="text" placeholder="@placeholderLesson.Name" id="Name:" style="width: 100%; min-width: 150px; max-width: 400px"/>
    </Control>
</InputComponent>
<InputComponent Label="Year:">
    <Control>
         <select class="select" @bind-value="@lesson.Year" @bind-value:event="onsubmit" id="Year:" style="width: 100%; min-width: 150px; max-width: 400px">
             <option value="12">12</option>
             <option value="13">13</option>
         </select>
    </Control>
</InputComponent>
<InputComponent Label="Lessons Per Cycle:">
    <Control>
        <input class="input" @bind-value="@lesson.NumLessons" @bind-value:event="onsubmit" type="number" placeholder="@placeholderLesson.NumLessons.ToString()" id="Lessons Per Cycle:" style="width: 100%; min-width: 150px; max-width: 400px"/>
    </Control>
</InputComponent>
<InputComponent Label="Teacher:">
    <Control>
        <input class="input" @bind-value="@lesson.Teacher" @bind-value:event="onsubmit" type="text" placeholder="@placeholderLesson.Teacher" id="Teacher:" style="width: 100%; min-width: 150px; max-width: 400px"/>
    </Control>
</InputComponent>
<InputComponent Label="Blocks:">
    <Control>
         @for (int b = 1; b <= 6; b++) {
             <label style="align-items:center;border:1px solid transparent;border-radius:4px;box-shadow:none;display:inline-flex;font-size:1.2rem;height:1.8em;justify-content:flex-start;line-height:1.5;padding: calc(.5em - 1px) calc(.5em - 1px);position:relative;vertical-align:top">@b.ToString()
                 @if (placeholderLesson.Blocks.Contains(b)) {
                     <input type="checkbox" class="checkbox" style="margin-left: 5px;align-items:center;border:1px solid transparent;border-radius:4px;box-shadow:none;display:inline-flex;height:1.8em;justify-content:flex-start;line-height:1.5;padding: calc(.5em - 1px) calc(.5em - 1px);position:relative;vertical-align:top" value="@b.ToString()" checked>
                 }
                 else {
                    <input type="checkbox" class="checkbox" style="margin-left: 5px;align-items:center;border:1px solid transparent;border-radius:4px;box-shadow:none;display:inline-flex;height:1.8em;justify-content:flex-start;line-height:1.5;padding: calc(.5em - 1px) calc(.5em - 1px);position:relative;vertical-align:top" value="@b.ToString()">
                }
                </label>
         }
    </Control>
</InputComponent>
@* align-items:center;border:1px solid transparent;border-radius:4px;box-shadow:none;display:inline-flex;font-size:1rem;height:2.5em;justify-content:flex-start;line-height:1.5;padding-bottom:calc(.5em - 1px);padding-left:calc(.75em - 1px);padding-right:calc(.75em - 1px);padding-top:calc(.5em - 1px);position:relative;vertical-align:top *@
<InputComponent Label="Group:">
    <Control>
         <select class="select" @bind-value="@lesson.Group" @bind-value:event="onsubmit" id="Group:" style="width: 100%; min-width: 150px; max-width: 400px">
             <option value="SL">SL</option>
             <option value="HL">HL</option>
         </select>
    </Control>
</InputComponent>

<div>@Message</div>

<br/><br/>
@code {

    [Parameter]
    public string Code { get; set; }
    string Message = "";
    
    Lesson placeholderLesson;
    private Lesson lesson;
    List<Lesson> classes;
    List<string> headers;

    protected override void OnInitialized() {
        base.OnInitialized();
        classes = new List<Lesson> {
            new Lesson {
                ClassCode = "1",
                Name = "Math AA HL",
                Year = 13,
                NumLessons = 4,
                Teacher = "M1",
                Blocks = new [] {5},
                Group = "HL",
                Rooms = new List<string> {
                    "N 0.4", "A 1.4", "A 1.6"
                }
            },
            new Lesson {
                ClassCode = "2",
                Name = "Math AA SL",
                Year = 13,
                NumLessons = 4,
                Teacher = "M1",
                Blocks = new [] {5},
                Group = "SL",
                Rooms = new List<string> {
                    "N 0.4", "A 1.4", "A 1.6"
                }
            },
            new Lesson {
                ClassCode = "3",
                Name = "Math AI HL",
                Year = 13,
                NumLessons = 4,
                Teacher = "M2",
                Blocks = new [] {5},
                Group = "HL",
                Rooms = new List<string> {
                    "N 0.4", "A 1.4", "A 1.6"
                }
            },
            new Lesson {
                ClassCode = "4",
                Name = "Math AI SL",
                Year = 13,
                NumLessons = 4,
                Teacher = "M2",
                Blocks = new [] {5},
                Group = "SL",
                Rooms = new List<string> {
                    "N 0.4", "A 1.4", "A 1.6"
                }
            }
        };
        lesson = classes.Find(x => x.ClassCode == Code);
        headers = new List<string> {"Class Code", "Name", "Year", "Lessons Per Cycle", "Teacher", "Block(s)", "Group"};
        placeholderLesson = new Lesson {
            ClassCode = lesson.ClassCode,
            Name = lesson.Name,
            Year = lesson.Year,
            NumLessons = lesson.NumLessons,
            Teacher = lesson.Teacher,
            Blocks = lesson.Blocks,
            Group = lesson.Group,
            Rooms = new List<string> (lesson.Rooms)
        };
    }

    void SubmitPressed() {
        Message = "Successfully Submitted!";
    }
}