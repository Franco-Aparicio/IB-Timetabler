@page "/lessons/"
@using System.Reflection
@* @using Microsoft.EntityFrameworkCore *@
@inject LessonService lessonService

<TitleComponent Page="Lessons"></TitleComponent>

<NavLink class="button is-small" href="lessons/addLesson" style="text-decoration: none">
    <span class="icon is-medium"><i class="fas fa-plus"></i></span>
    <span>Add Lesson</span>
</NavLink>

<br/><br/>
Click on a lesson name to edit!
<br/>

@* ColumnsToExcludeCSV="ID, ClassCode, Rooms, Periods" *@
@* <AutoLessonTableComponent *@
@*     Headers="headers" *@
@*     Items="classes" *@
@*     ColumnsToExcludeCSV="ID, ClassCode" *@
@*     LinkFirst="/lessons/ClassCode"> *@
@* </AutoLessonTableComponent> *@

@* <tr> *@
@*     <td>@emp.Id</td> *@
@*     <td>@emp.EmployeName</td> *@
@*     <td>@emp.Gender</td> *@
@*     <td>@emp.Designation</td> *@
@*     <td>@emp.City</td> *@
@*     <td> *@
@*         <a class="nav-link" href="EditEmployee/@emp.Id"> *@
@*             <span class="oi oi-pencil" aria-hidden="true">Edit</span> *@
@*         </a> *@
@*         <a class="nav-link" href="Delete/@emp.Id"> *@
@*             <span class="oi oi-trash" aria-hidden="true">Delete</span> *@
@*         </a> *@
@*     </td> *@
@* </tr> *@

@if (Lessons is null) {
    <button class="button is-loading is-large border-0 has-text-centered"></button>
}
else {
    <br/>
    <div style="overflow-x: auto">
        <table class="table is-bordered is-striped is-hoverable" style="width: 100%">
            <thead>
            <tr class="has-text-centered">
                @foreach (var head in headers) {
                    <th>
                        @head
                    </th>
                }
            </tr>
            </thead>
            <tbody>
            @foreach (Lesson l in Lessons) {
                <tr class="has-text-centered">
                @foreach (var member in l.GetType().GetMembers()) {
                    @if (member.MemberType == MemberTypes.Property &&
                         !columnsToExclude.Contains(member.Name.ToLower())) {
                        @if (member.Name == "Name") {
                            <td>
                                <a href="@($"lessons/{l.Id.ToString()}")">@l.Name</a>
                            </td>
                        }
                        else {
                            <td>
                                @l.GetType().GetProperty(member.Name)?.GetValue(l);
                            </td>
                        }
                    }
                }
            </tr>
            }
            </tbody>
        </table>
    </div>
}

<br/><br/>
@code {

    List<Lesson> Lessons = new List<Lesson>();
    List<string> headers = new List<string> {"Name", "Year", "Level", "Lessons Per Cycle", "Teacher"};
    string[] columnsToExclude = new[] {"id", "classcode"};
    // int selectedLessonIndex = -1;
    
    protected override async void OnInitialized() {
        await RefreshLessons();
    }

    private async Task RefreshLessons() {
        Lessons = await lessonService.GetAllLessonsAsync();
    }
}